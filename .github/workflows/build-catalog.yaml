# Build and Push Catalog Image to Quay.io
name: Build Catalog Images

on:
  schedule:
    - cron: '0 0 * * *'
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: quay.io
  ORGANIZATION: redhat-best-practices-for-k8s
  IMAGE_NAME: qe-custom-catalog

jobs:
  build-catalog-images:
    if: github.repository_owner == 'redhat-best-practices-for-k8s'
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ github.sha }}

      - name: Setup docker buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      # Binary: linux-amd64-opm - https://github.com/operator-framework/operator-registry/releases/
      - name: Download latest opm binary from Github
        run: |
          # Get the latest release from the operator-registry repo
          curl -s https://api.github.com/repos/operator-framework/operator-registry/releases/latest \
            | grep "browser_download_url.*linux-amd64-opm" \
            | cut -d : -f 2,3 \
            | tr -d \" \
            | wget -qi -

      - name: Make opm binary executable
        run: chmod +x linux-amd64-opm

      - name: Run opm validate command
        run: ./linux-amd64-opm validate custom-catalog

      - name: Login to Quay.io
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        if: ${{ github.ref == 'refs/heads/main' && github.repository_owner == 'redhat-best-practices-for-k8s' }}
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.QUAY_ROBOT_USERNAME }}
          password: ${{ secrets.QUAY_ROBOT_TOKEN }}

      - name: Force cleanup of docker
        run: sudo docker rm -f $(docker ps -aq)

      # Example: Pushes the image quay.io/redhat-best-practices-for-k8s/qe-custom-catalog:v4.14-latest
      # The idea being that we want to rebuild the images daily, but apply our custom catalog settings as well.
      - name: Build Catalog Image(s)
        uses: docker/build-push-action@14487ce63c7a62a4a324b0bfb37086795e31c6c1 # v6.16.0
        with:
          context: .
          file: custom-catalog.Dockerfile
          platforms: linux/amd64,linux/arm64,linux/ppc64le,linux/s390x
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.ORGANIZATION }}/${{ env.IMAGE_NAME }}:latest

